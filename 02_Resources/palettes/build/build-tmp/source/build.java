/* autogenerated by Processing revision 1276 on 2021-12-03 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

// This sketch is a reference to preview color palettes often used in my work.
// Run Sketch and click on a palette to return the palette for use in a sketch.
// Add new palettes to 2D array.

int[][] palette = {
	{0xFFF60000,0xFFFF8C00,0xFFFFEE00,0xFF4DE94C,0xFF3783FF,0xFF4815AA},
	{0xFF63416A,0xFFFBDD73,0xFFB7CC55,0xFF39A129,0xFFBAAAEE,0xFFC55F8F,0xFFFB8588},
	{0xFF3592A9,0xFF49261F,0xFFE8DEBF,0xFF292D4E,0xFF333D2A,0xFF79805A,0xFFA1B3C4,0xFF0D0D0F},
	{0xFFDF938D,0xFFECF7F1,0xFF004C66,0xFFCC3141,0xFF8E0001},
	{0xFFA33920,0xFF36354C,0xFF657978,0xFFC47660},
	{0xFFCCB0F7,0xFFA9ECFF,0xFFF7A0B3},
	{0xFF264653,0xFF2A9D8F,0xFFE9C46A,0xFFF4A261,0xFFE76F51},
	{0xFFFC6919,0xFF481D4A,0xFF7E70C5,0xFFEE3163,0xFFF9D691},
	{0xFF051531,0xFFE8C954,0xFF004956},
	{0xFF040F15,0xFF094B70,0xFFC0AFBD,0xFF422937,0xFF014751},
	{0xFF553470,0xFFAB2658,0xFFE8C954,0xFF39736A,0xFF170F27},
	{0xFFF04F32,0xFFF3C91C,0xFF1060B0,0xFFEFF0F5,0xFF252020},
	{0xFFE145E5,0xFFFBDD73,0xFF4F97F1,0xFFB9CCE3},
	{0xFF050A0E,0xFF494643,0xFF7E765B,0xFF041E43,0xFF001A1E},
	{0xFF432009,0xFF512D15,0xFFAD802D,0xFF75AD2D,0xFF2DAD91,0xFF2B4CA6,0xFF622BA6},
	{0xFF000F41,0xFFFFFFFF,0xFFA500FA,0xFFFBA422,0xFF61FF82,0xFF55FFF5,0xFFFA7823}
};


int total = palette.length;
 public void settings() {
	size(450, total * 50);
}
 public void draw() {
	noStroke();
	background(0);
	for (int i = 0; i < palette.length; i++) {
		for (int j = 0; j < palette[i].length; j++) {
			fill  (palette[i][j]);
			float x = j * (width / palette[i].length);
			float y = i * height / total;
			float w = width / palette[i].length;
			float h = (height / total) - 10;
			rect (x, y, w, h);
		}
	}
}
 public void mousePressed() {
	int y = (int)mouseY / (height / total);
	int l = palette[y].length;
	String 	[] colors = new String [l];
	print("color[] palette = {");
	for (int i = 0; i < l; i++) {
		colors[i] = hex(palette[y][i], 6);
		if (i < l - 1) {
			print("#" + colors[i] + ",");
		} else {
			print("#" + colors[i] + "};");
		}
	}
	println();
}


  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
