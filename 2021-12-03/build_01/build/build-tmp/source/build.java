/* autogenerated by Processing revision 1276 on 2021-12-04 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

int[] palette = {0xFF03A08F,0xFF0160B6,0xFFFFDD5E,0xFFFFA051,0xFFFF3C1B};
boolean record 	= false;
float 	rate 	= 0.05f;
float 	off;
float   x, y, r;
int 	bg = palette[0];
 public void setup() {
	/* size commented out by preprocessor */;
	strokeWeight(5);
	stroke(bg);
	noFill();
}
 public void draw() {
	background(bg);
	pushMatrix();
	translate(width / 2, height / 2);
	rotate(TWO_PI * cos(off));
	recursion(0, 0, width / 2, 6);
	popMatrix();
	off += rate;
	if (record) saveFrame("../exports/frames/###.png");
	if (frameCount > PI / rate) exit();
}
 public void recursion(float x, float y, float s, int l) {
	s = s * abs((sin(off)));
	fill(palette[1+l % (palette.length-1)]);
	circle(x, y, s);
	fill(bg);
	circle(x, y, s - 20);
	l--;
	if (l > 1) {
		recursion(x - s / 2, y + s / l, s / 2, l);
		recursion(x + s / 2, y - s / l, s / 2, l);
	}
}


  public void settings() { size(600, 600, P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
