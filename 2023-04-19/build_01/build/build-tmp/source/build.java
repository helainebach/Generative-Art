/* autogenerated by Processing revision 1292 on 2023-04-19 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.text.SimpleDateFormat;
import java.util.Date;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {



String 	pathDATA = "../../../0_data/";
String  folderName;
float   rate = PI / 400;
int  	bg   = 0xFFF3E3ED;
int  	fg   = 0xFF010300;
float 	c, u, n, t;
//
public void setup() {
	folderName = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());
	/* size commented out by preprocessor */;
	noFill();
	rectMode(CENTER);
	u = 8;
	u = width / u;
}
public void draw() {
	background(bg);
	for (float y = u / 2; y < height; y += u) {
		for (float x = u / 2; x < width; x += u) {
			c = u;
			while (c > 0) {
				n = noise(c, x + map(mouseX, 0, width, 0, 1), y + map(mouseY, 0, height, 0, 1));
				// n = noise(c, x + abs(sin(t)), y + abs(cos(t)));
				if (n > .5f) {
					stroke(fg);
				} else {
					noStroke();
				}
				square(x, y, c);
				c--;
			}
			c = u;
		}
	}
	t += rate;
	// record();
}
public void record() {
	saveFrame("../exports/" + folderName + "/###.png");
	if (frameCount > TWO_PI / rate) exit();
}
public void mousePressed() {
	String fileName = new SimpleDateFormat("yyyyMMddHHmmss'.png'").format(new Date());
	saveFrame("../exports/" + folderName + "/" + fileName);
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
