/* autogenerated by Processing revision 1276 on 2021-11-14 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

Box[] boxes = new Box[100];
int count;
int area;
int cell;
 public void setup() {
	/* size commented out by preprocessor */;
}
 public void draw() {
	background(0);
	for (int i = 0; i < boxes.length; i++) {
		boxes[i] = new Box(cord(i).x, cord(i).y, cell*.9f, cell*.9f);
	}
}
 public PVector cord(int n) {
	count = 10;
	area  = count * count;
	cell  = width / count;
	int x = (n % count) * cell;
	int y = (n / count) * cell;
	PVector cord = new PVector(x, y);
	return  cord;
}
class Box  {
	float x, y, w, h;
	int c;
	Box (float _x, float _y, float _w, float _h) {
		x = _x;
		y = _y;
		w = _w;
		h = _h;
		c = color(random(255),random(255),random(255));
		display();
	}
	 public void display() {
		fill(255);
		rect(x, y, w, h);
	}
	 public void update(){
		randomSeed(299);
		fill(c);
		rect(x, y, w, h);
	}
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
