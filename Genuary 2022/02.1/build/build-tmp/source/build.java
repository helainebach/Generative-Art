/* autogenerated by Processing revision 1276 on 2022-01-02 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

// Genuary 2022 - Day 02
// Dithering
PImage 	img;
int   newCol;
String  pathDATA 	= "../../../0_data/";
int[] palette 	= {0xFF0160B6,0xFF03A08F,0xFFFFDD5E,0xFFFFA051,0xFFFF3C1B};
int  	bg 			= 0;
int 	factor 		= 6;

 public void setup() {
	/* size commented out by preprocessor */;
	background(bg);
}
 public void draw() {
	img = loadImage(pathDATA + "photo/coral.png");
	img.resize(1080, 1080);
	for (int y = 0; y < img.height; y += factor) {
		for (int x = 0; x < img.width; x += factor) {
			int   index   = index(x, y);
			int pix     = img.pixels[index];
			float minDist = 255 * 255 + 255 * 255 + 255 * 255 + 1;
			for (int i = 0; i < palette.length; i++) {
				float rDiff = red  (pix) - red  (palette[i]);
				float gDiff = green(pix) - green(palette[i]);
				float bDiff = blue (pix) - blue (palette[i]);
				float dist  = rDiff * rDiff + gDiff * gDiff + bDiff * bDiff;
				if (dist < minDist) {
					minDist = dist;
					newCol  = palette[i];
				}
			}
			noStroke();
			fill(newCol);
			rect(x, y, factor, factor);
		}
	}

}
 public int index (int x, int y) {
	return x + y * img.width;
}


  public void settings() { size(1080, 1080); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
