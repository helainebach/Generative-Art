/* autogenerated by Processing revision 1276 on 2022-01-07 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

// Genuary 2022 - Day 05
// Sol LeWitt Wall Drawing.

// Helaine Bach Wall Drawing Number 01

// Draw 100 Lines.
// The first point of each line should be on the right edge of the wall.
// The second point of each line should be on the bottom edge of the wall.
// Alternate color every 20 lines.

int   wall     = 255;
int[] palette  = {0xFF0160B6,0xFF03A08F,0xFFFFDD5E,0xFFFFA051,0xFFFF3C1B};

 public void setup() {
	strokeWeight(1);
	/* size commented out by preprocessor */;
	background(wall);
	// // Draw 100 Lines.
	// for (float i = 0; i < 100; i++) {
	// 	// The first point of each line should be on the right edge of the wall.
	// 	float x1 = 0;
	// 	float y1 = random(height);
	// 	float x2 = random(width);
	// 	//The second point of each line should be on the bottom edge of the wall.
	// 	float y2 = height;
	// 	float s = (i / 100) * 5;
	// 	// Alternate color every 20 lines.
	// 	stroke(palette[(int)s]);
	// 	line(x1, y1, x2, y2);
	// }
}

 public void draw(){
	background(wall);
	// Draw 100 Lines.
	for (float i = 0; i < 100; i++) {
		// The first point of each line should be on the right edge of the wall.
		float x1 = 0;
		float y1 = random(height);
		float x2 = random(width);
		//The second point of each line should be on the bottom edge of the wall.
		float y2 = height;
		float s = (i / 100) * 5;
		// Alternate color every 20 lines.
		stroke(palette[(int)s]);
		line(x1, y1, x2, y2);
	}
	saveFrame("../exports/###.png");
}


  public void settings() { size(350, 200); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
