/* autogenerated by Processing revision 1276 on 2022-01-09 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

int bg  = 0xFF0160B6;
int fg  = 255;
float off = 0.0f;
 public void setup() {
	/* size commented out by preprocessor */;
	stroke(fg);
}
 public void draw() {
	background(bg);
	pushMatrix();
	margin(.9f);

	noFill();
	stroke(255);
	strokeWeight(1);
	grid(10);
	
	strokeWeight(.25f);
	grid(50);
	
	strokeWeight(5);
	rect(0, 0, width, width);
	
	strokeWeight(3);
	boxes();
	

	popMatrix();
	off += .005f;
	float vidLength = 15;
	float fps       = 30;
	saveFrame("../exports/frames/###.png"); if (frameCount == vidLength*fps) exit();
}
 public void grid(int count) {
	int area = count * count;
	int cell = width / count;
	for (int n = 0; n < area; n++) {
		int x = (n % count) * cell;
		int y = (n / count) * cell;
		square(x, y, cell);
	}
}

 public void boxes() {
	int res = width / 25;
	for (int y = 0; y < height; y += res) {
		for (int x = 0; x < width; x += res) {
			float n = noise(x, y, off);
			if (n < .25f) {
				noStroke();
				fill(255);
				square(x, y, res);
			}
			if (n > .65f && x < width - res * 2 && y < height - res * 2) {
				stroke(255);
				noFill();
				square(x, y, res * 2);
			}
		}
	}
}

 public void margin(float scl) {
	scale(scl);
	translate((width - width * scl) / 2, (height - height * scl) / 2);
}


  public void settings() { size(1000, 1000); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
