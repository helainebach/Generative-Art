/* autogenerated by Processing revision 1276 on 2021-12-04 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.text.SimpleDateFormat;
import java.util.Date;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {



float 	off;
String 	fileName;
float 	rate = 0.005f;
float 	x, y, res, n, a, s, ang;
 public void setup() {
	/* size commented out by preprocessor */;
	fileName = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());
}
 public void draw() {
	background(255);
	blob(width / 2, height / 2, width / 3, 10, 100);
	// record();
	off += rate;
}
 public void record() {
	saveFrame("../exports/" + fileName + "/###.png");
	if (frameCount > TWO_PI / rate) exit();
}
 public void blob(float px, float py, float s, float res, float a) {
	translate(px, py);
	beginShape();
	// extraPoint(TWO_PI - (TWO_PI / res));
	for (float i = 0; i < TWO_PI; i = i + TWO_PI / res) {
		polar(i, s, a);
		curveVertex(x, y);
		// circle(x, y, 10);
	}
	extraPoint(TWO_PI);
	// extraPoint(TWO_PI / res);
	endShape(CLOSE);
}
 public void polar (float ang, float s, float a) {
	n = noise(ang, off) * a;
	x = n + sin(ang) * s;
	y = n + cos(ang) * s;
}
 public void extraPoint(float p) {
	polar(p, s, a);
	curveVertex(x, y);
	circle(x, y, 10);
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
