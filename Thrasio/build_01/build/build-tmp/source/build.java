/* autogenerated by Processing revision 1276 on 2021-12-17 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.text.SimpleDateFormat;
import java.util.Date;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

int[] palette = {0xFF000F41,0xFFA500FA,0xFF55FFF5,0xFFFA7823};
int t, w;
 public void setup() {
	/* size commented out by preprocessor */;
	noStroke();
}
 public void draw() {
	// scale(2);
	// translate(width / 2.5, height / 2);
	// rotate(PI / 4);
	drawing();
}
 public void column(int n) {
	for (int i = 0; i < n; i++) {
		fill(palette[(n + i) % palette.length]);
		rect(0, i * (height / n), w, height / n);
	}
}
 public void drawing() {
	// translate(-width / 2, -height / 2);
	while (t < width) {
		w = (int)(random(5, 12)) * 6;
		column((int)random(1, 4) * 4);
		translate(w, 0);
		t = t + w;
	}
}



 public void keyPressed() {
		switch (key) {
		case 'p':
		String fileName = new SimpleDateFormat("yyyyMMddHHmmss'.png'").format(new Date());
		saveFrame("../exports/stills/"+fileName);
		break;
	}
}


  public void settings() { size(600, 600, P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
