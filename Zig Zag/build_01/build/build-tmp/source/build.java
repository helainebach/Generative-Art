/* autogenerated by Processing revision 1278 on 2023-06-18 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

int u;
int[] palette = {0xFF0160B6,0xFF03A08F,0xFFFFDD5E,0xFFFFA051,0xFFFF3C1B};

 public void setup() {
	/* size commented out by preprocessor */;
	background(255);
	strokeCap(SQUARE);
	u = width / 5;
	noFill();
}
 public void draw() {
	strokeWeight(u/2 + 1);
	for (float i = 0; i < 7; i++) {
		stroke(palette[(int)i%palette.length]);
		zigZag(i * u/2, i * u/-2);
		zigZag(i * u/-2, i * u/2);
	}
	grid(20);
}
 public void grid(int count) {
	int area = count * count;
	int cell = width / count;
	for (int n = 0; n < area; n++) {
		int x = (n % count) * cell;
		int y = (n / count) * cell;
		noFill();
		stroke(255);
		strokeWeight(1);
		square(x, y, cell);
	}
}
 public void zigZag(float x, float y) {
	beginShape();
	while (y <= height) {
		vertex(x, y);
		y += u;
		vertex(x, y);
		x += u;
	}
	endShape(OPEN);
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
