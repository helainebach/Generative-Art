/* autogenerated by Processing revision 1276 on 2021-12-18 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

 public void setup() {
	/* size commented out by preprocessor */;
}
 public void draw() {
	graphPaper();
	strokeWeight(2);
	stroke(255, 0, 0);
	beginShape();
	point(0,150);
	point(mouseX,mouseY);
	point(300,100);
	point(300,200);
	point(mouseX,height-mouseY);
	point(0,150);
	endShape(OPEN);
}
 public void grid(int count) {
	int area = count * count;
	int cell = width / count;
	for (int n = 0; n < area; n++) {
		int x = (n % count) * cell;
		int y = (n / count) * cell;
		square(x, y, cell);
	}
}
 public void graphPaper() {
	strokeWeight(1);
	background(255);
	noFill();
	stroke(0, 10);
	grid(width / 10);
	stroke(0, 40);
	grid(width / 50);
}

 public void point(float x, float y) {
	curveVertex(x, y);
	fill(255,0,0);
	circle(x, y, 10);
	noFill();
}

 public void mousePressed() {
	println(mouseX,mouseY);
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
