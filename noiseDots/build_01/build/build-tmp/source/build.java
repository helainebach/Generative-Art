/* autogenerated by Processing revision 1278 on 2023-01-24 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

int[] palette  = {0xFF010300,0xFFF3E3ED,0xFFFEC513,0xFFFE7434,0xFFEFA9EC};
float 	off 	 = 0;
float   rate 	 = PI / 150;
 public void setup() {
	/* size commented out by preprocessor */;
}
 public void draw() {
	background(palette[1]);
	dotGrid(60, palette[2], palette[3]);
}
 public void dotGrid(int count, int c1, int c2) {
	int cell = width / count;
	int area = count * (height / cell);
	translate(cell, cell);
	for (int n = 0; n < area; n++) {
		int x = (n % count) * cell;
		int y = (n / count) * cell;
		float dotSize = noise(x, y, off) * cell * 2;
		int c = lerpColor(c1, c2, map(n, 0, area, 0, 1));
		if (x < width - cell && y < height - cell) {
			stroke(c);
			strokeWeight(dotSize);
			point(x, y);
		}
	}
	off += rate;
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
