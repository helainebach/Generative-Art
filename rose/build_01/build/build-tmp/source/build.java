/* autogenerated by Processing revision 1278 on 2022-05-03 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import processing.svg.*;
import java.text.SimpleDateFormat;
import java.util.Date;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {





boolean exportSVG = false;
String  fileName;

 public void setup(){

	/* size commented out by preprocessor */;
	
}

 public void draw() {
 
	background(255);
  
  	if (exportSVG){
		fileName = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());	
  	 	beginRecord(SVG, "../exports/svgs/"+fileName+".svg");
  	}
	noFill();
  	stroke(0);
//--------------------------------------------	

	rose(width/2,height/2,7,2,width/2);

//--------------------------------------------	
  	if (exportSVG){
  	  	endRecord();
  	  	exportSVG = false;
 	}
}

 public void keyPressed(){

	if (key == 'e'){
  		exportSVG = true;
  	}
}

 public void rose(float px, float py, float n, float d, float rad){
	pushMatrix();
		translate(px,py);
	float k = n / d;
	beginShape();
	for (float a = 0; a < TWO_PI*d; a+=.01f) {
		float r = rad*cos(k*a);
		float x = r * cos(a);
		float y = r * sin(a);
		vertex(x,y);
	}
	endShape(OPEN);
	popMatrix();
}


  public void settings() { size(800, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
