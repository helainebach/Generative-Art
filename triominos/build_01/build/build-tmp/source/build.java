/* autogenerated by Processing revision 1276 on 2022-08-08 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {

String pathDATA = "../../../0_data/";
PFont font;
 public void setup() {
	/* size commented out by preprocessor */;
	stroke(0);
	font = createFont(pathDATA + "fonts/Gotham-Bold.otf", 20);
	textFont(font);
	fill(0);
	Tri tri1 = new Tri();
}
 public void draw() {
	background(255);
	pushMatrix();
	translate(width / 2, height / 2);
	rotate(PI / 3);
	tri1.show();
	// tri();
	popMatrix();

}
// void tri (Array dig) {
// 	beginShape();
// 	fill(0);
// 	for (float a = 0; a < 3; a++) {
// 		float x = r * cos(radians(a * 120));
// 		float y = r * sin(radians(a * 120));
// 		vertex(x, y);
// 	}
// 	endShape(CLOSE);
// 	for (int n = 0; n < 3; n++) {
// 		pushMatrix();
// 		rotate(radians(n * 120));
// 		translate(r * .6, 0);
// 		rotate(radians(-90));
// 		fill(255);
// 		textAlign(CENTER);
// 		text(dig[n], 0, 0);
// 		popMatrix();
// 	}
// }
class Tri {
	float r;
	Tri (float r) {
		r = 100;
	}
	 public void show() {
		beginShape();
		fill(0);
		for (float a = 0; a < 3; a++) {
			float x = r * cos(radians(a * 120));
			float y = r * sin(radians(a * 120));
			vertex(x, y);
		}
		endShape(CLOSE);
		for (int n = 0; n < 3; n++) {
			pushMatrix();
			rotate(radians(n * 120));
			translate(r * .6f, 0);
			rotate(radians(-90));
			fill(255);
			textAlign(CENTER);
			text(n, 0, 0);
			popMatrix();
		}
	}
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
